/** @type {import('cz-git').UserConfig} */
module.exports = {
  extends: ['@commitlint/config-conventional'],
  //  extends: ['@commitlint/config-conventional', '@commitlint/is-ignored'],
  ignores: [(message) => message.includes('MERGE')],
  rules: {
    // @see: https://commitlint.js.org/#/reference-rules
    'type-enum': [
      2,
      'always',
      [
        'build',
        'chore',
        'ci',
        'docs',
        'feat',
        'fix',
        'perf',
        'refactor',
        'revert',
        'style',
        'test',
        'module',
        'upgrade',
        'downgrade',
        'lint',
        'resources',
        'assets',
        'merge',
        'hotfix',
        'config',
        'i18n',
        'analytics',
        'cleanup',
        'wip',
        'types'
      ],
    ],
  },
  prompt: {
    useEmoji: true,
    types: [
      { value: 'feat', name: 'feat:        ✨  A new feature', emoji: ':sparkles:' },
      { value: 'module', name: 'module:      🎸  Add/update module or package', emoji: ':guitar:' },
      { value: 'fix', name: 'fix:         🐛  A bug fix', emoji: ':bug:' },
      { value: 'docs', name: 'docs:        📝  Documentation only changes', emoji: ':memo:' },
      { value: 'style', name: 'style:       💄  Changes that do not affect the meaning of the code', emoji: ':lipstick:' },
      { value: 'refactor', name: 'refactor:    ♻️   A code change that neither fixes a bug nor adds a feature', emoji: ':recycle:' },
      { value: 'perf', name: 'perf:        ⚡️  A code change that improves performance', emoji: ':zap:' },
      { value: 'test', name: 'test:        ✅  Adding missing tests or correcting existing tests', emoji: ':white_check_mark:' },
      { value: 'build', name: 'build:       📦️   Changes that affect the build system or external dependencies', emoji: ':package:' },
      { value: 'ci', name: 'ci:          🎡  Changes to our CI configuration files and scripts', emoji: ':ferris_wheel:' },
      { value: 'chore', name: "chore:       🔨  Other changes that don't modify src or test files", emoji: ':hammer:' },
      { value: 'revert', name: 'revert:      ⏪️  Reverts a previous commit', emoji: ':rewind:' },
      { value: 'upgrade', name: 'upgrade:     ⬆️  Upgrade dependencies', emoji: ':arrow_up:' },
      { value: 'downgrade', name: 'downgrade:   ⬇️  Downgrade dependencies', emoji: ':arrow_down:' },
      { value: 'lint', name: 'lint:        🚨  Fix compiler/linter warnings', emoji: ':rotating_light:' },
      { value: 'resources', name: 'resources:   🚚  Move/rename resources', emoji: ':truck:' },
      { value: 'assets', name: 'assets:      ⛲  Add/update assets', emoji: ':fountain:' },
      { value: 'merge', name: 'merge:       🔀  Merge branches', emoji: ':twisted_rightwards_arrows:' },
      { value: 'hotfix', name: 'hotfix:      🚑  Critical hotfix', emoji: ':ambulance:' },
      { value: 'config', name: 'config:      🔧  Add/update config files', emoji: ':wrench:' },
      { value: 'i18n', name: 'i18n:        🌐  Internationalization & localization', emoji: ':globe_with_meridians:' },
      { value: 'analytics', name: 'analytics:     📈  Add or update analytics or track code', emoji: ':chart_with_upwards_trend:' },
      { value: 'cleanup', name: 'cleanup:      🗑️  Deprecate code that needs to be cleaned up.', emoji: ':wastebasket:' },
      { value: 'wip', name: 'wip:         🚧  Work in Progress.', emoji: ':construction:' },
      { value: 'types', name: 'types:      🏷️  Add or update types.', emoji: ':label:' },
    ],
  },
};
